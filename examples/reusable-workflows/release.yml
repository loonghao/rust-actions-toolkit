# Example: Using reusable release workflow
# Place this file at .github/workflows/release.yml in your project

name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    uses: loonghao/rust-actions-toolkit/.github/workflows/reusable-release.yml@main
    with:
      # Optional: Customize Rust toolchain
      rust-toolchain: stable
      # Optional: Specify binary name (auto-detected from Cargo.toml if not provided)
      binary-name: ""
      # Optional: Enable/disable Python wheels (default: false)
      # Only builds wheels if pyproject.toml exists
      enable-python-wheels: false
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# This reusable workflow:
# 1. Builds binaries natively for Linux, macOS, and Windows
# 2. Uploads binaries to the GitHub release
# 3. Builds Python wheels if enabled and pyproject.toml exists
# 4. Creates appropriate archives (.tar.gz for Unix, .zip for Windows)
