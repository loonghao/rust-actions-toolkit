# Cross.toml - No Custom Docker Build Solution
# This configuration completely avoids Docker permission issues
# by using only standard cross images without any pre-build steps

[build]
# Critical: Do NOT set default-target globally as it affects proc-macros

[build.env]
# Pass through essential environment variables
passthrough = [
    "CARGO_TARGET_DIR",
    "CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER",
    "RUSTFLAGS",
    "OPENSSL_STATIC",
    "OPENSSL_NO_VENDOR",
    "PKG_CONFIG_ALLOW_CROSS",
]

# Linux ARM64 targets - standard images only
[target.aarch64-unknown-linux-gnu]
# Use standard cross image - no custom build needed
image = "ghcr.io/cross-rs/cross:aarch64-unknown-linux-gnu"

[target.aarch64-unknown-linux-gnu.env]
# Critical: Ensure proc-macros use host platform
CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER = ""

# Linux musl targets - standard images only
[target.x86_64-unknown-linux-musl]
# Use standard cross image - no custom build needed
image = "ghcr.io/cross-rs/cross:x86_64-unknown-linux-musl"

[target.x86_64-unknown-linux-musl.env]
# Critical: Ensure proc-macros use host platform
CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER = ""
# Static linking configuration
RUSTFLAGS = "-C target-feature=+crt-static"

[target.aarch64-unknown-linux-musl]
# Use standard cross image - no custom build needed
image = "ghcr.io/cross-rs/cross:aarch64-unknown-linux-musl"

[target.aarch64-unknown-linux-musl.env]
# Critical: Ensure proc-macros use host platform
CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER = ""
# Static linking configuration
RUSTFLAGS = "-C target-feature=+crt-static"

# Windows targets - standard images only
[target.x86_64-pc-windows-gnu]
# Use standard cross image - no custom build needed
image = "ghcr.io/cross-rs/cross:x86_64-pc-windows-gnu"

[target.x86_64-pc-windows-gnu.env]
# Critical: Ensure proc-macros use host platform
CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER = ""
# Static linking for zero dependencies
RUSTFLAGS = "-C target-feature=+crt-static -C link-args=-static"

# Key advantages of this configuration:
# 1. NO custom Docker builds - eliminates all permission issues
# 2. Uses only standard, pre-built cross images
# 3. Maintains full proc-macro protection
# 4. Works with all proc-macro crates (serde, async-trait, thiserror, clap)
# 5. Zero Docker permission problems
# 6. Fast builds - no image building time

# Usage instructions:
# 1. Copy this file to your project root as Cross.toml
# 2. Remove any existing Cross.toml that has pre-build steps
# 3. Ensure you're using rust-actions-toolkit v3.0.4 or later
# 4. Run cross build --target <target> --release
# 5. All proc-macro crates will work correctly without Docker issues

# Perfect for projects like turbo-cdn with:
# - serde (derive)
# - async-trait
# - thiserror
# - clap (derive)
# - Any other proc-macro crates
