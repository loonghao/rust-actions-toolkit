# Enhanced CI Configuration Example
# This example shows how to use the improved rust-actions-toolkit
# with release build consistency testing

name: CI

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

permissions:
  contents: read
  actions: read          # For security audit
  security-events: write # For security audit

jobs:
  ci:
    uses: loonghao/rust-actions-toolkit/.github/workflows/reusable-ci.yml@v3
    with:
      rust-toolchain: stable
      enable-coverage: false
      enable-python-wheel: false
      
      # Enable release build testing to ensure consistency
      test-release-builds: true
      build-depth: release  # basic, release, full

      # Use the same target platforms as release.yml
      # This ensures CI and Release consistency
      # Optimized platform list based on 2025 mainstream Rust project best practices
      release-target-platforms: |
        [
          {"target": "x86_64-unknown-linux-gnu", "os": "ubuntu-22.04", "priority": "high"},
          {"target": "x86_64-apple-darwin", "os": "macos-13", "priority": "high"},
          {"target": "aarch64-apple-darwin", "os": "macos-13", "priority": "high"},
          {"target": "x86_64-pc-windows-msvc", "os": "windows-2022", "priority": "high"},
          {"target": "aarch64-unknown-linux-gnu", "os": "ubuntu-22.04", "priority": "medium"},
          {"target": "x86_64-unknown-linux-musl", "os": "ubuntu-22.04", "priority": "medium"},
          {"target": "aarch64-unknown-linux-musl", "os": "ubuntu-22.04", "priority": "medium"},
          {"target": "x86_64-pc-windows-gnu", "os": "ubuntu-22.04", "priority": "low"}
        ]
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
