# Example: Simplest possible CI setup using the GitHub Action
# Place this file at .github/workflows/ci.yml in your project

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # All-in-one CI job - handles formatting, clippy, docs, and basic testing
  ci:
    name: Rust CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run comprehensive Rust CI
        uses: loonghao/rust-actions-toolkit@v1
        with:
          command: ci
          rust-toolchain: stable
          check-format: true
          check-clippy: true
          check-docs: true
          clippy-args: '--all-targets --all-features -- -D warnings'

  # Optional: Cross-platform testing for libraries that need it
  cross-platform-test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust (without checks)
        uses: loonghao/rust-actions-toolkit@v1
        with:
          command: setup
          rust-toolchain: stable

      - name: Run tests
        run: cargo test --verbose --workspace

  # Optional: Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run security audit
        uses: rustsec/audit-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
