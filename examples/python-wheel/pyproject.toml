# Example pyproject.toml for a Rust project with Python wheels
# This enables automatic Python wheel building in the release workflow

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "my-python-rust-lib"  # Change to your Python package name
description = "A Python package with Rust extensions"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
]
keywords = ["rust", "python", "performance"]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/your-username/my-python-rust-lib"
Repository = "https://github.com/your-username/my-python-rust-lib"
Documentation = "https://docs.rs/my-python-rust-lib"
Changelog = "https://github.com/your-username/my-python-rust-lib/blob/main/CHANGELOG.md"

[tool.maturin]
# The name of the Rust crate to build
module-name = "my_python_rust_lib._internal"
# Python source directory
python-source = "python"
# Features to enable when building
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
