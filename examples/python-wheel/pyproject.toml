# Example pyproject.toml for a Rust project with Python wheels
# This enables automatic Python wheel building in the release workflow
# Place this file at the root of your project

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "my-python-rust-lib"  # CHANGE THIS: Replace with your Python package name
description = "A Python package with Rust extensions"
authors = [
    {name = "Your Name", email = "your.email@example.com"},  # CHANGE THIS
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]  # Version managed by release-plz
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
]
keywords = ["rust", "python", "performance"]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "mypy>=1.0",
    "maturin>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
]

[project.urls]
Homepage = "https://github.com/your-username/my-python-rust-lib"  # CHANGE THIS
Repository = "https://github.com/your-username/my-python-rust-lib"  # CHANGE THIS
Documentation = "https://docs.rs/my-python-rust-lib"  # CHANGE THIS
Changelog = "https://github.com/your-username/my-python-rust-lib/blob/main/CHANGELOG.md"  # CHANGE THIS
Issues = "https://github.com/your-username/my-python-rust-lib/issues"  # CHANGE THIS

[tool.maturin]
# The name of the Rust crate to build (should match Cargo.toml name)
module-name = "my_python_rust_lib._internal"  # CHANGE THIS
# Python source directory (optional)
python-source = "python"
# Features to enable when building
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
testpaths = ["tests", "python/tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Required Rust dependencies in Cargo.toml:
# [dependencies]
# pyo3 = { version = "0.20", features = ["extension-module"] }
#
# [lib]
# name = "my_python_rust_lib"  # Should match the module name
# crate-type = ["cdylib"]
