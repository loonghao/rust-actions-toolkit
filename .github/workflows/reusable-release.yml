name: Reusable Release

# Simple and universal reusable workflow for Rust releases
# Focuses on native compilation for each platform

on:
  workflow_call:
    inputs:
      rust-toolchain:
        description: 'Rust toolchain version'
        required: false
        type: string
        default: 'stable'
      binary-name:
        description: 'Binary name to release (auto-detected if not specified)'
        required: false
        type: string
        default: ''
      enable-python-wheels:
        description: 'Enable Python wheel building'
        required: false
        type: boolean
        default: false
    # Note: GITHUB_TOKEN is automatically provided by GitHub Actions

# Note: Permissions are inherited from the calling workflow
# The calling workflow should include:
# permissions:
#   contents: write  # For uploading release assets

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Native release builds for each platform
  release:
    name: Release - ${{ matrix.os }}
    if: startsWith(github.ref_name, 'v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build and upload release
        uses: ./
        with:
          command: release
          binary-name: ${{ inputs.binary-name }}
          enable-python-wheels: ${{ inputs.enable-python-wheels }}
          rust-toolchain: ${{ inputs.rust-toolchain }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
